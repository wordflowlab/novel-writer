description = "撰写章节内容，自动应用风格和人物声音"

prompt = """
撰写章节内容，智能应用风格和人物声音。

用户要求：{{args}}

## 执行步骤

### 1. 准备工作
使用 run_shell_command 执行初始化：.specify/scripts/bash/write-chapter.sh

读取相关文件：
- 使用 glob_files 查找 "stories/**/outline.md" - 章节规划
- spec/knowledge/character-voices.md - 人物声音
- spec/knowledge/world-setting.md - 世界观
- .specify/memory/writing-constitution.md - 写作风格
- memory/personal-voice.md - 个人表达指纹
- spec/knowledge/natural-expression.md - 自然化表达指南
- spec/presets/anti-ai-detection.md - 反AI检测策略

### 2. 定位章节
确定要写的章节：
- 解析参数获取章节号
- 查看该章在整体结构中的位置
- 确认对应的方法节点

### 3. 应用写作要素

**风格一致性**
- 保持既定的叙事视角
- 使用设定的语言风格
- 维持节奏和氛围

**人物声音**
- 每个角色保持独特说话方式
- 体现性格特点
- 符合身份背景

**情节推进**
- 承接上章内容
- 完成本章任务
- 为下章铺垫

### 4. 智能分节策略

**重要说明**
由于 Gemini 单次输出限制（约2500-3000字），长章节需要分多次生成。

**标准三节模式**（7500字左右）
适合：过渡章节、日常描写
- 起：开场设置（2500字）
- 承：情节发展（2500字）
- 合：收束过渡（2500字）

**推荐四节模式**（9000-9500字）
适合：重要剧情、高潮章节，采用经典"起承转合"结构

1. **对话密集型**（2:2.5:3:2 千字）
   - 起：场景设置（2000字）
   - 承：对话展开（2500字）
   - 转：冲突升级（3000字）【高潮】
   - 合：影响收束（2000字）

2. **动作场面型**（2:2:3:2.5 千字）
   - 起：危机逼近（2000字）
   - 承：初步交锋（2000字）
   - 转：激战高潮（3000字）【最精彩】
   - 合：胜负已定（2500字）

3. **情感铺垫型**（2.5:2.5:2.5:2 千字）
   - 起：氛围营造（2500字）
   - 承：情感递进（2500字）
   - 转：情感爆发（2500字）
   - 合：余韵回味（2000字）

4. **悬念转折型**（2:2.5:3:2 千字）
   - 起：线索铺设（2000字）
   - 承：疑云渐起（2500字）
   - 转：真相大白（3000字）【关键揭示】
   - 合：影响延续（2000字）

**智能建议**
分析本章重要性后，自动推荐：
"第[N]章是[普通/关键]章节，建议采用[三节/四节]模式，是否接受？"

### 5. 应用反AI检测策略

**自然化处理**
基于读取的反AI检测文件，对生成内容进行处理：

1. **词汇层面优化**
   - 替换AI特征词汇为口语化表达
   - 控制成语密度（每千字2-3个）
   - 适度使用方言/网络用语

2. **句法自然化**
   - 长短句交错（避免均匀分布）
   - 插入不完整句和口语化表达
   - 添加语气词和口头禅

3. **认知模拟**
   - 模拟记忆不完美（"好像是..."）
   - 体现注意力选择性
   - 加入个人主观色彩

4. **缺陷植入**（提升真实感）
   - 每2000字1个错别字（的地得混用）
   - 标点随意性（省略号变化）
   - 偶尔的语序调整

5. **个性标记**
   - 应用personal-voice.md中的个人特征
   - 保持风格一致性
   - 强化独特表达习惯

### 6. 生成章节内容

**标准模式**（单节完成）
使用 write_file 创建章节文件：
# 第X章：[章节标题]
[正文内容，2500-3000字，已应用反AI策略]

**三节模式**（7500字）
- 第X章(起)：开场设置 [2500字]
- 第X章(承)：情节发展 [2500字]
- 第X章(合)：收束过渡 [2500字]

**四节模式**（9000-9500字）
- 第X章(起)：[对应字数]
- 第X章(承)：[对应字数]
- 第X章(转)：[对应字数] 【高潮部分】
- 第X章(合)：[对应字数]

每节保持连贯，注意：
- 起：设置场景和氛围
- 承：承接开场，推进情节
- 转：关键转折或高潮（四节模式）
- 合：适当收束，引向下章

---
字数：[实际字数]
要点完成：[√完成的要点]
下章预告：[一句话预告]

### 7. 质量检查
- 字数是否达标
- 要点是否完成
- 风格是否一致
- 人物是否到位
- 分节衔接是否自然
- **AI检测自检**：
  - 是否有连续3句结构相似
  - 是否用词过于书面
  - 是否缺少口语化特征
  - 是否过于完美无瑕疵

### 8. 追踪数据自动更新

写作完成后，自动执行以下更新：

**更新情节追踪**
使用 edit_file 更新 spec/tracking/plot-tracker.json：
- 标记当前章节完成
- 记录完成的情节节点
- 添加新增的伏笔

**更新时间线**
使用 edit_file 更新 spec/tracking/timeline.json：
- 提取章节中的时间信息
- 更新故事当前时间点
- 检查时间连续性

**更新角色关系**
使用 edit_file 更新 spec/tracking/relationships.json：
- 识别关系变化
- 记录关系演变
- 更新关系状态

**更新角色状态**
使用 edit_file 更新 spec/tracking/character-state.json：
- 记录角色位置变化
- 更新角色发展阶段
- 追踪角色成长

### 9. 生成追踪提醒
```
✅ 第N章写作完成，追踪数据已更新

建议执行：
- /plot-check 验证情节连贯性
- /timeline 检查时间逻辑
- /relations 确认关系变化
- /track 批量验证最近章节（推荐每10章执行一次）
```

### 10. 完成报告
✅ 第X章创作完成！
- 字数：[实际字数]
- 文件：stories/[名称]/chapters/[文件名]
- 完成度：[要点完成情况]
- 追踪：已自动更新所有追踪文件
- 下一步：继续 /write 下一章

## 批量验证提醒
当完成多个章节后（建议每5-10章），运行：
- /track 深度验证所有内容一致性
- /plot-check 检查情节逻辑
- /world-check 验证世界观一致性

## 注意事项
- 严格遵守设定的风格
- 人物对话要有个性
- 情节符合大纲要求
- 保持场景生动具体
- 追踪数据自动同步
- **反AI检测要点**：
  - 自然化表达优于完美文字
  - 适度缺陷增加真实感
  - 个人特征要贯穿全文
  - 避免AI特征词汇堆积
"""