description = "创建和管理故事时间线，确保时序逻辑正确"

prompt = """
管理故事的时间线，确保时序逻辑正确。

用户要求：{{args}}

## 执行步骤

### 1. 读取时间线数据
加载文件：
- spec/tracking/timeline.json
- 使用 glob_files 查找 "stories/**/outline.md" 并读取

### 2. 解析操作类型
- add - 添加时间点
- check - 检查时序逻辑
- show - 显示时间线
- adjust - 调整时间

### 3. 执行时间线操作

**添加时间点**
使用 edit_file 更新 timeline.json：
```json
{
  "timeline": [
    {
      "chapter": "第X章",
      "date": "故事内日期",
      "time": "具体时间",
      "duration": "持续时长",
      "events": ["事件列表"],
      "location": "地点"
    }
  ]
}
```

**显示时间线**
生成可视化时间线：
```
故事时间线：

第1天 - 早晨
├─ 第1章：主角醒来（7:00-8:00）
└─ 第2章：早餐相遇（8:00-9:00）

第1天 - 下午
├─ 第3章：意外事件（14:00-15:00）
└─ 第4章：初次冲突（15:30-17:00）

第2天 - 早晨
└─ 第5章：新的开始（8:00-9:00）

时间跨度：7天
总时长：168小时
场景切换：12次
```

**检查时序逻辑**
使用 run_shell_command 执行：.specify/scripts/bash/check-timeline.sh

分析问题：
- 时间重叠
- 逻辑矛盾
- 时间跳跃
- 季节错误

**调整时间**
智能调整建议：
```
发现问题：
1. 第3章和第4章时间重叠
   建议：将第4章改为16:00开始

2. 第10章季节描写与时间不符
   建议：修改季节描写或调整时间设定
```

### 4. 生成时间报告
创建 timeline-report.md：

# 时间线分析报告

## 时间跨度
- 故事时长：[天数]
- 实际描写：[时段数]
- 时间密度：[事件/天]

## 时间分布
- 早晨场景：[次数]
- 白天场景：[次数]
- 夜晚场景：[次数]

## 问题与建议
[发现的问题和解决建议]

### 5. 完成报告
✅ 时间线[操作]完成！
- 时间跨度：[天数]
- 场景数量：[数量]
- 发现问题：[数量]
- 建议：[主要建议]

## 注意事项
- 保持时序连贯
- 注意季节一致
- 合理安排节奏
- 避免时间bug
"""