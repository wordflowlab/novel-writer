# /write 命令 - 章节写作
# Gemini CLI 格式（TOML）

[write]
description = "基于任务清单执行章节写作"
category = "methodology"
execute_immediately = false
confirmation_message = "即将开始章节写作。"

[write.parameters.script]
type = "script_path"
value = ".specify/scripts/bash/check-writing-state.sh"
value_ps = ".specify\\scripts\\powershell\\check-writing-state.ps1"

[write.parameters.chapter]
type = "argument"
required = false
description = "章节编号或名称"

[write.prompts.main]
template = """
基于七步方法论流程执行章节写作。

用户要求：{{args}}

## 执行步骤

### 1. 前置检查
使用 run_shell_command 执行状态检查脚本。

加载方法论基准文档：
- memory/novel-constitution.md - 创作宪法
- stories/*/specification.md - 故事规格
- stories/*/creative-plan.md - 创作计划
- stories/*/tasks.md - 任务清单
- stories/*/content/* - 前文内容

### 2. 选择写作任务
从 tasks.md 中选择待执行的写作任务：
- 查找状态为 [ ] 的任务
- 优先选择 P0 高优先级任务
- 更新任务状态为 [~] 进行中

### 3. 验证前置条件
- 检查依赖任务是否完成
- 验证必要设定是否就绪
- 确认前序章节是否完成

### 4. 应用创作原则

**遵循宪法**
- 符合核心价值观
- 达到质量标准
- 保持风格一致

**满足规格**
- 包含P0必要元素
- 符合目标读者定位
- 遵守内容红线

**执行计划**
- 按照章节架构
- 符合节奏设计
- 达到字数要求

### 5. 创作内容

**开场**：吸引读者，承接前文
**发展**：推进情节，深化人物
**转折**：制造冲突或悬念
**收尾**：适当收束，引出下文

### 6. 智能分节策略

**说明**
由于输出限制，长章节可能需要分多次生成。

**标准三节模式**（7500字左右）
适合：过渡章节、日常描写
- 起：开场设置（2500字）
- 承：情节发展（2500字）
- 合：收束过渡（2500字）

**推荐四节模式**（9000-9500字）
适合：重要剧情、高潮章节，采用经典"起承转合"结构

1. **对话密集型**（2:2.5:3:2 千字）
   - 起：场景设置（2000字）
   - 承：对话展开（2500字）
   - 转：冲突升级（3000字）【高潮】
   - 合：影响收束（2000字）

2. **动作场面型**（2:2:3:2.5 千字）
   - 起：危机逼近（2000字）
   - 承：初步交锋（2000字）
   - 转：激战高潮（3000字）【最精彩】
   - 合：胜负已定（2500字）

3. **情感铺垫型**（2.5:2.5:2.5:2 千字）
   - 起：氛围营造（2500字）
   - 承：情感递进（2500字）
   - 转：情感爆发（2500字）
   - 合：余韵回味（2000字）

4. **悬念转折型**（2:2.5:3:2 千字）
   - 起：线索铺设（2000字）
   - 承：疑云渐起（2500字）
   - 转：真相大白（3000字）【关键揭示】
   - 合：影响延续（2000字）

**智能建议**
分析本章重要性后，自动推荐：
"第[N]章是[普通/关键]章节，建议采用[三节/四节]模式，是否接受？"


### 7. 生成章节内容

使用 write_file 创建章节文件：
# 第X章：[章节标题]
[正文内容]

保存到：stories/*/content/第X章.md

---
字数：[实际字数]
任务状态：已更新为 [x] 完成

### 8. 质量自检

**宪法合规**：
- 符合核心价值观
- 达到质量标准
- 保持风格一致

**规格符合**：
- 包含必要元素
- 符合目标定位
- 遵守约束条件

**计划执行**：
- 按照章节架构
- 符合节奏设计
- 达到字数要求

### 9. 完成报告
✅ 章节创作完成！
- 保存位置：stories/*/content/第X章.md
- 字数：[实际字数]
- 任务状态：已更新

### 10. 建议下一步
- 继续下一个写作任务
- 每5章运行 /analyze 进行质量检查
- 发现问题及时调整计划

## 与方法论的关系

七步方法论流程：
1. /constitution → 创作宪法
2. /specify → 故事规格
3. /clarify → 澄清决策
4. /plan → 创作计划
5. /tasks → 任务分解
6. /write → 【当前步骤】
7. /analyze → 综合验证

记住：写作是执行层，要严格遵循上层的规格和计划。
"""

[write.outputs]
file_pattern = "stories/{story_name}/content/第{chapter}章.md"
format = "markdown"
update_tasks = true