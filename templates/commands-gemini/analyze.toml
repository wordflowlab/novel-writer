# /analyze 命令 - 智能综合验证分析
# Gemini CLI 格式（TOML）

[analyze]
description = "智能分析：根据创作阶段自动选择框架分析或内容分析"
category = "methodology"
execute_immediately = false
confirmation_message = "即将执行智能综合分析。"

[analyze.parameters.script]
type = "script_path"
value = ".specify/scripts/bash/check-analyze-stage.sh"
value_ps = ".specify\\scripts\\powershell\\check-analyze-stage.ps1"

[analyze.parameters.type]
type = "option"
options = ["auto", "framework", "content"]
default = "auto"
description = "分析类型：auto(自动判断)/framework(框架分析)/content(内容分析)"

[analyze.prompts.main]
template = """
对小说项目进行智能化综合分析。根据当前创作阶段，自动选择执行**框架一致性分析**（write 之前）或**内容质量分析**（write 之后）。

## 核心理念

**一个命令，双重智能**：
- 📐 **框架分析**：在写作前验证规格、计划、任务的一致性
- 📝 **内容分析**：在写作后验证已完成内容的质量和符合度

## 执行流程

### 1. 智能阶段检测

运行脚本获取当前创作状态，解析返回的 JSON：

```json
{
  "analyze_type": "framework|content",
  "chapter_count": 0,
  "has_spec": true,
  "has_plan": true,
  "has_tasks": true,
  "story_dir": "/path/to/story",
  "reason": "原因说明"
}
```

### 2. 决策逻辑

- 用户指定 `--type=framework` → 强制框架分析
- 用户指定 `--type=content` → 强制内容分析
- 章节数 = 0 → 框架分析
- 章节数 < 3 → 框架分析
- 章节数 ≥ 3 → 内容分析

### 3. 执行对应分析

根据决策结果，执行框架分析或内容分析。

---

## 模式A：框架一致性分析

**目标**：在写作前验证准备工作是否充分。

### A1. 加载基准文档
- 宪法文件：`.specify/memory/novel-constitution.md`
- 规格文件：`stories/*/specification.md`
- 计划文件：`stories/*/creative-plan.md`
- 任务文件：`stories/*/tasks.md`

### A2. 覆盖率分析

```markdown
## 覆盖率分析报告

### P0 需求覆盖
- [需求1：主角成长线] → ✅ 计划第3章段、任务#5-8
- [需求2：反派设定] → ⚠️ 计划中提及，但无具体任务
- [需求3：悬念设置] → ❌ 计划和任务中均未覆盖
```

### A3. 一致性检查

```markdown
## 一致性检查报告

### 规格 ↔ 计划
- ✅ 主题表达一致
- ⚠️ 规格要求"快节奏"，但计划前5章节奏较慢

### 计划 ↔ 任务
- ✅ 所有计划章节都有任务
- ❌ 计划要求第5章是高潮，但任务标注为"过渡章节"
```

### A4. 准备就绪评估

```markdown
## 准备就绪评估

### 必要条件 (P0)
- [x] 规格完整且明确
- [x] 计划覆盖所有 P0 需求
- [ ] 任务分解完整（缺少3个章节的任务）
- [ ] 无致命逻辑矛盾（发现2处）

### 总体评分：6/10

**建议**：
1. 🔴 必须修复：补充第10-12章的任务
2. 🔴 必须修复：解决时间线和角色能力矛盾

**结论**：当前**不建议开始写作**，请先解决 P0 问题。
```

---

## 模式B：内容质量分析

**目标**：对已完成的内容进行综合质量验证。

### B1. 加载验证基准
- 宪法文件：`.specify/memory/novel-constitution.md`
- 规格文件：`stories/*/specification.md`
- 计划文件：`stories/*/creative-plan.md`
- 任务列表：`stories/*/tasks.md`
- **已完成内容**：`stories/*/content/*.md`

### B2. 宪法合规性检查

```markdown
## 宪法合规性报告

### 核心价值观检查
- [x] 价值观原则1：积极向上的主题 ✅
- [x] 价值观原则2：避免低俗内容 ✅
- [ ] 价值观原则3：尊重文化传统 ⚠️ 第7章有争议描述

### 质量标准验证
- 逻辑一致性：8/10 ⚠️ 第3章和第6章有小矛盾
- 人物饱满度：7/10
- 文字水准：8/10

**总体评分：8/10**
```

### B3. 规格符合度分析

```markdown
## 规格符合度分析

### 核心需求覆盖
#### P0（必须包含）
- [需求1：父子冲突] → ✅ 第2-4章充分展现
- [需求2：悬念设置] → ⚠️ 第5章悬念不足
- [需求3：反派立体] → ❌ 反派尚未正式出场

覆盖率：67% (2/3)

**总体评分：7/10**
```

### B4. 内容质量分析

```markdown
## 内容质量分析

### 文本统计
- 总字数：45,230 字
- 平均章节长度：6,461 字
- 完成进度：35%（7/20 章）

### 技术问题
#### 逻辑问题
1. 第3章：角色提到"三年前的事"，但时间线显示只过了两年
2. 第6章：主角使用了第2章明确说"不会"的能力

#### 人物一致性
1. 主角在第2章和第5章对同一类事件反应矛盾

### 亮点识别
1. 第1章：开篇钩子设计精妙，引入自然
2. 第4章：父子对话层次丰富，情感真挚

**质量评分：7.5/10**
```

### B5. 生成改进建议

```markdown
## 改进建议

### 紧急修复（P0）
1. **时间线矛盾**
   - 影响：破坏读者信任
   - 建议：统一第3章和第6章的时间表述
   - 位置：第3章第2节，第6章第4节

2. **角色能力矛盾**
   - 影响：严重影响人物可信度
   - 建议：在第4-5章之间增加"学习武功"的过渡情节
   - 位置：第2章第5节，第6章第3节

### 优化建议（P1）
1. **第5章悬念不足**
   - 当前：第5章结尾平淡，缺少钩子
   - 建议：在结尾增加一个意外事件或信息
   - 预期效果：提升读者留存率
```

### B6. 生成验证报告

创建 `stories/*/analysis-report.md`：

```markdown
# 作品分析报告

## 摘要
- 分析日期：2025-10-01
- 分析范围：第1-7章
- 总体评分：7.5/10
- 建议行动：继续创作，批量修订前7章

## 核心指标
| 维度 | 得分 | 说明 |
|------|------|------|
| 宪法合规 | 8/10 | 价值观正确，风格一致 |
| 规格符合 | 7/10 | P0需求覆盖67% |
| 内容质量 | 7.5/10 | 有2处逻辑问题需修复 |

**平均分：7.7/10**
```

---

## 使用场景

### 场景1：准备开始写作

```
用户：/analyze
AI：检测到无章节内容，执行框架一致性分析...

【覆盖率分析】
⚠️ 规格需求"反派设定"无对应任务
❌ 计划第10-12章缺少任务分解

【准备评分】6/10
建议：修复上述问题后再开始写作
```

### 场景2：完成部分章节

```
用户：/analyze
AI：检测到已完成 7 章，执行内容质量分析...

【宪法合规】8/10 ✅
【规格符合】7/10 ⚠️
【内容质量】7.5/10 ⚠️ 有2处逻辑问题

【建议】：修复P0问题后，继续创作第8-10章
```

---

**记住**：**一个命令，智能双模，克制而强大。analyze 的目的是让作品更好，无论是在写作前还是写作后。**
"""

[analyze.analysis_dimensions]
dimensions = [
    "合规性",
    "一致性",
    "完整性",
    "质量性",
    "创新性",
    "可读性",
    "可行性"
]

[analyze.outputs]
report_path = "stories/{story_name}/analysis-report.md"
format = "markdown"

[analyze.modes]
framework = "框架一致性分析（write 之前）"
content = "内容质量分析（write 之后）"
auto = "智能判断模式"
