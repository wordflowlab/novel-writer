# /tasks 命令 - 生成任务清单
# Gemini CLI 格式（TOML）

[tasks]
description = "将创作计划分解为可执行的任务清单"
category = "methodology"
execute_immediately = false
confirmation_message = "即将生成具体的任务清单。"

[tasks.parameters.script]
type = "script_path"
value = ".specify/scripts/bash/generate-tasks.sh"
value_ps = ".specify\\scripts\\powershell\\generate-tasks.ps1"

[tasks.prompts.main]
template = """
基于创作计划生成具体的、可执行的任务列表。

## 执行步骤

### 1. 加载计划文档
运行脚本加载：
- 创作计划：`stories/*/creative-plan.md`
- 章节架构信息
- 时间线和依赖关系

### 2. 生成任务列表
创建 `stories/*/tasks.md`：

```markdown
# 任务清单

## 写作任务

### 高优先级 [必须首先完成]
- [ ] [P0] 第1章：开篇钩子 (3000字)
- [ ] [P0] 角色档案：主角详细设定
- [ ] [P0] 世界观：基础规则设定

### 中优先级 [正常推进]
- [ ] [P1] 第2-5章：故事展开 (每章3000字)
- [ ] [P1] 角色档案：主要配角
- [ ] [P1] 场景设定：重要地点

### 低优先级 [可选完善]
- [ ] [P2] 番外：角色前传
- [ ] [P2] 设定集：详细世界观
```

#### 任务标记说明
- `[ ]` - 待开始
- `[~]` - 进行中
- `[x]` - 已完成
- `[P]` - 可并行执行
- `[依赖:X]` - 需要先完成任务X
- `[P0/P1/P2]` - 优先级标记

### 3. 任务排序和分组
- 按优先级分组
- 识别依赖关系
- 标记可并行任务
- 估算完成时间

### 4. 生成执行计划

```markdown
## 执行计划

### 第一阶段（第1周）
并行任务组1：
- 主角设定 [P]
- 世界观基础 [P]
- 第1章草稿 [P]

### 第二阶段（第2-3周）
串行任务：
- 第2章 [依赖:第1章]
- 第3章 [依赖:第2章]

并行任务组2：
- 配角设定 [P]
- 场景设计 [P]
```

### 5. 输出任务统计
- 总任务数
- 预计总字数
- 预计完成时间
- 关键里程碑

提示下一步：开始执行 `/write` 或查看特定任务详情。
"""

[tasks.task_generation]
auto_priority = true
estimate_time = true
identify_dependencies = true

[tasks.outputs]
file_pattern = "stories/{story_name}/tasks.md"
format = "markdown"